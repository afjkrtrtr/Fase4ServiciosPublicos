package configuracion;

import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.DriverManager;
import java.sql.Connection;

public class conexion
{
    String bd;
    String url;
    String user;
    String password;
    String driver;
    Connection cx;
    
    public conexion() {
        this.bd = "ServiciosPublicos";
        this.url = "jdbc:mysql://localhost:3306/ServiciosPublicos";
        this.user = "root";
        this.password = "";
        this.driver = "com.mysql.cj.jdbc.Driver";
    }
    
    public Connection conectar() {
        try {
            Class.forName(this.driver);
            this.cx = DriverManager.getConnection(this.url, this.user, this.password);
            System.out.println(invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, this.bd));
        }
        catch (SQLException | ClassNotFoundException ex3) {
            final Exception ex2;
            final Exception ex = ex2;
            Logger.getLogger(conexion.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(invokedynamic(makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;, this.bd));
        }
        return this.cx;
    }
    
    public void desconectar() {
        try {
            this.cx.close();
        }
        catch (SQLException ex) {
            Logger.getLogger(conexion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static void main(final String[] args) {
        final conexion conn = new conexion();
        conn.conectar();
    }
    
    public int ejecutarSentenciaSql(final String sentSQL) {
        try {
            final PreparedStatement preSt = this.cx.prepareStatement(sentSQL);
            preSt.execute();
            return 1;
        }
        catch (SQLException ex) {
            Logger.getLogger(conexion.class.getName()).log(Level.SEVERE, null, ex);
            return 0;
        }
    }
    
    public ResultSet consultarReg(final String sentSQL) {
        try {
            final PreparedStatement preSt = this.cx.prepareStatement(sentSQL);
            final ResultSet res = preSt.executeQuery();
            return res;
        }
        catch (Exception ex) {
            System.out.println(ex.getMessage());
            return null;
        }
    }
}
